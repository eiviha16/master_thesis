action_space_size: !!python/object/apply:numpy.core.multiarray.scalar
- !!python/object/apply:numpy.dtype
  args:
  - i8
  - false
  - true
  state: !!python/tuple
  - 3
  - <
  - null
  - null
  - null
  - -1
  - -1
  - 0
- !!binary |
  AgAAAAAAAAA=
actor:
  T: 413
  bits_per_feature: 8
  device: CPU
  nr_of_clauses: 940
  number_of_state_bits_ta: 6
  s: 1.85
  seed: 42
  weighted_clauses: false
algorithm: TM_DDPG_2
batch_size: 80
buffer_size: 5000
critic:
  T: 87
  bits_per_feature: 5
  device: CPU
  max_update_p: 0.127
  nr_of_clauses: 1450
  number_of_state_bits_ta: 9
  s: 5.36
  seed: 42
  weighted_clauses: false
  y_max: 60
  y_min: 25
dataset_file_name: observation_data
epochs: 6
exploration_prob_decay: 0.008
exploration_prob_init: 0.5
gamma: 0.906
obs_space_size: 4
save: true
soft_update_type: soft_update_1
test_freq: 1
update_grad: 0.981
comment: This is type a update for TAC, The final Params Cartpole
Score mean: 500.0
Score std: 0.0

actor = {'nr_of_clauses': 940, 'T': int(940 * 0.44), 's': 1.85, 'device': 'CPU', 'weighted_clauses': False, 'bits_per_feature': 8, "seed": 42, 'number_of_state_bits_ta': 6}
critic = {'max_update_p': 0.127, 'nr_of_clauses': 1450, 'T': int(1450 * 0.06), 's': 5.36, 'y_max': 60, 'y_min': 25, 'device': 'CPU', 'weighted_clauses': False, 'bits_per_feature': 5, "seed": 42, 'number_of_state_bits_ta': 9}
config = {'algorithm': 'TM_DDPG_2', 'buffer_size': 5000, 'exploration_prob_init': 0.5, 'exploration_prob_decay': 0.008, 'soft_update_type': 'soft_update_1', 'gamma': 0.906, 'update_grad': 0.981, 'actor': actor, 'critic': critic, 'batch_size': 80, 'epochs': 6, 'test_freq': 1, "save": True, "dataset_file_name": "observation_data"}


CARTPOLE:
sweep_configuration:
    "method": "random",
    "metric": {"goal": "maximize", "name": "score"},
    "parameters": {
        "gamma": {"values": list(np.arange(0.90, 1.00, 0.001))},
        "update_grad": {"values": list(np.arange(0.001, 1.0, 0.001))},
        "batch_size": {"values": list(range(16, 128, 16))},
        "epochs": {"values": list(range(1, 8, 1))},

        "a_t": {"values": list(np.arange(0.01, 1.00, 0.01))},
        "a_nr_of_clauses": {"values": list(range(800, 1200, 20))},
        "a_specificity": {"values": list(np.arange(1.0, 10.00, 0.01))},
        "a_bits_per_feature": {"values": list(range(5, 15, 1))},
        "a_number_of_state_bits_ta": {"values": list(range(3, 10, 1))},

        "c_t": {"values": list(np.arange(0.01, 1.00, 0.01))},
        "c_nr_of_clauses": {"values": list(range(800, 2000, 50))},
        "c_specificity": {"values": list(np.arange(1.0, 10.00, 0.01))},
        "c_bits_per_feature": {"values": list(range(5, 15, 1))},
        "c_number_of_state_bits_ta": {"values": list(range(3, 10, 1))},
        "c_max_update_p": {"values": list(np.arange(0.001, 0.2, 0.001))},

        "c_y_max": {"values": list(range(60, 80, 5))},
        "c_y_min": {"values": list(range(20, 40, 5))},
        "buffer_size": {"values": list(range(500, 10_000, 500))},
        "exploration_p_decay": {"values": list(np.arange(0.001, 0.01, 0.001))},
        "exploration_p_init": {"values": list(np.arange(0.2, 1.00, 0.1))},
    }
}



